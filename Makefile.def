#============== image configuration

# Registry configuration
REGISTRY ?= ghcr.io/infrastructure-io

# Image names
TOOLS_IMAGE_NAME = tools
TOPOHUB_IMAGE_NAME = topohub
IMAGE_PYROSCOPE_NAME ?= docker.io/grafana/pyroscope:latest

# Image tags
VERSION ?= $(shell git rev-parse --short HEAD)
TOOLS_IMAGE_TAG ?= latest

# Full image paths
TOOLS_IMAGE = $(REGISTRY)/$(TOOLS_IMAGE_NAME)
TOPOHUB_IMAGE = $(REGISTRY)/$(TOPOHUB_IMAGE_NAME)

# Full image references with tags
TOOLS_IMAGE_REF = $(TOOLS_IMAGE):$(TOOLS_IMAGE_TAG)
TOPOHUB_IMAGE_REF = $(TOPOHUB_IMAGE):$(VERSION)

#===================

# Output directory
BIN_DIR := bin

# Go build configuration
GOOS ?= linux
GOARCH ?= amd64
CGO_ENABLED ?= 0
GO_BUILD_ENV ?= CGO_ENABLED=$(CGO_ENABLED) GOOS=$(GOOS) GOARCH=$(GOARCH)

GO_BUILD_FLAGS += -mod=vendor
ifeq ($(DISABLE_RACE),)
    GO_BUILD_FLAGS += -race 
    GO_BUILD_ENV += CGO_ENABLED=1
endif
ifeq ($(DISABLE_LOCKDEBUG),)
    GO_BUILD_FLAGS += -tags=lockdebug
endif

GO_BUILD = $(GO_BUILD_ENV) go build $(GO_BUILD_FLAGS)

#=============== image environment variables

PROJECT_VERSION = $(shell cat $(dir $(lastword $(MAKEFILE_LIST)))/VERSION)
GIT_COMMIT_VERSION = $(shell git show -s --format='format:%H')
GIT_COMMIT_TIME = $(shell git show -s --format='format:%aI')

DOCKER_BUILD_FLAGS := --build-arg GIT_COMMIT_VERSION=$(GIT_COMMIT_VERSION) --build-arg GIT_COMMIT_TIME=$(GIT_COMMIT_TIME) --build-arg PROJECT_VERSION=$(PROJECT_VERSION)

#================== kind configuration
KIND_NETWORK_SUBNET := 192.168.1.0/24
KIND_NETWORK_GATEWAY := 192.168.1.1
KIND_CONTROL_IP := 192.168.1.2
KIND_WORKER1_IP := 192.168.1.3
KIND_WORKER2_IP := 192.168.1.4

#====== pyroscope
PYROSCOPE_CONTAINER_NAME := e2e-pyroscope
PYROSCOPE_LOCAL_PORT := 4040