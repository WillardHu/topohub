// Copyright 2024 Authors of infrastructure-io
// SPDX-License-Identifier: Apache-2.0

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/infrastructure-io/topohub/pkg/k8s/apis/topohub.infrastructure.io/v1beta1"
	topohubinfrastructureiov1beta1 "github.com/infrastructure-io/topohub/pkg/k8s/client/clientset/versioned/typed/topohub.infrastructure.io/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSSHStatuses implements SSHStatusInterface
type fakeSSHStatuses struct {
	*gentype.FakeClientWithList[*v1beta1.SSHStatus, *v1beta1.SSHStatusList]
	Fake *FakeTopohubV1beta1
}

func newFakeSSHStatuses(fake *FakeTopohubV1beta1) topohubinfrastructureiov1beta1.SSHStatusInterface {
	return &fakeSSHStatuses{
		gentype.NewFakeClientWithList[*v1beta1.SSHStatus, *v1beta1.SSHStatusList](
			fake.Fake,
			"",
			v1beta1.SchemeGroupVersion.WithResource("sshstatuses"),
			v1beta1.SchemeGroupVersion.WithKind("SSHStatus"),
			func() *v1beta1.SSHStatus { return &v1beta1.SSHStatus{} },
			func() *v1beta1.SSHStatusList { return &v1beta1.SSHStatusList{} },
			func(dst, src *v1beta1.SSHStatusList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.SSHStatusList) []*v1beta1.SSHStatus { return gentype.ToPointerSlice(list.Items) },
			func(list *v1beta1.SSHStatusList, items []*v1beta1.SSHStatus) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
