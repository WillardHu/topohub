// Copyright 2024 Authors of infrastructure-io
// SPDX-License-Identifier: Apache-2.0

// Code generated by informer-gen. DO NOT EDIT.

package v1beta1

import (
	internalinterfaces "github.com/infrastructure-io/topohub/pkg/k8s/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// HostEndpoints returns a HostEndpointInformer.
	HostEndpoints() HostEndpointInformer
	// HostOperations returns a HostOperationInformer.
	HostOperations() HostOperationInformer
	// RedfishStatuses returns a RedfishStatusInformer.
	RedfishStatuses() RedfishStatusInformer
	// SSHStatuses returns a SSHStatusInformer.
	SSHStatuses() SSHStatusInformer
	// Subnets returns a SubnetInformer.
	Subnets() SubnetInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// HostEndpoints returns a HostEndpointInformer.
func (v *version) HostEndpoints() HostEndpointInformer {
	return &hostEndpointInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// HostOperations returns a HostOperationInformer.
func (v *version) HostOperations() HostOperationInformer {
	return &hostOperationInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// RedfishStatuses returns a RedfishStatusInformer.
func (v *version) RedfishStatuses() RedfishStatusInformer {
	return &redfishStatusInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// SSHStatuses returns a SSHStatusInformer.
func (v *version) SSHStatuses() SSHStatusInformer {
	return &sSHStatusInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Subnets returns a SubnetInformer.
func (v *version) Subnets() SubnetInformer {
	return &subnetInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
